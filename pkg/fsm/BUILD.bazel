load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "communications.go",
        "fsm.go",
        "fsm_active.go",
        "fsm_active_file_io.go",
        "fsm_backoff.go",
        "fsm_discovering.go",
        "fsm_failed.go",
        "fsm_handoff.go",
        "fsm_inactive.go",
        "fsm_metadata.go",
        "fsm_missing.go",
        "fsm_pull_initiator.go",
        "fsm_pull_peer.go",
        "fsm_push_initiator.go",
        "fsm_push_peer.go",
        "fsm_receiving.go",
        "fsm_s3_pull_initiator.go",
        "fsm_s3_push_initiator.go",
        "metadata.go",
        "mount.go",
        "prelude.go",
        "s3.go",
        "snapshotlogic.go",
        "transfers.go",
        "types.go",
        "units.go",
    ],
    importpath = "github.com/dotmesh-io/dotmesh/pkg/fsm",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/client:go_default_library",
        "//pkg/container:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/observer:go_default_library",
        "//pkg/registry:go_default_library",
        "//pkg/store:go_default_library",
        "//pkg/types:go_default_library",
        "//pkg/user:go_default_library",
        "//pkg/utils:go_default_library",
        "//pkg/zfs:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/credentials:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/session:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/s3:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/s3/s3manager:go_default_library",
        "//vendor/github.com/nu7hatch/gouuid:go_default_library",
        "//vendor/github.com/portworx/kvdb:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "fsm_handoff_test.go",
        "fsm_metadata_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/store:go_default_library",
        "//pkg/types:go_default_library",
    ],
)
